
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'SLR'

_lr_signature = '{r4i\xb2\x05\xbe\xeao\x14\xc2\xffNOt\xc6'
    
_lr_action_items = {'EM':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,],[11,-13,-14,11,11,11,11,11,11,-21,11,-16,-5,-6,11,11,-20,-8,-9,-7,-12,-10,-11,30,11,-19,-15,-18,11,-17,]),'SH1':([0,26,],[2,2,]),'SH2':([0,26,],[3,3,]),'H2':([0,26,],[4,4,]),'H3':([0,26,],[5,5,]),'H1':([0,26,],[6,6,]),'H6':([0,26,],[7,7,]),'H4':([0,26,],[8,8,]),'H5':([0,26,],[9,9,]),'TEXT':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,],[10,-13,-14,10,10,10,10,10,10,-21,10,10,-5,-6,10,10,-20,10,10,10,10,10,10,10,10,-19,10,10,-18,10,-17,]),'CR':([0,2,3,10,12,13,14,15,17,18,19,20,21,22,23,24,26,27,29,30,31,32,],[14,-13,-14,-21,26,-16,-5,-6,-4,-20,-8,-9,-7,-12,-10,-11,14,-19,-15,-18,-2,-17,]),'LINE':([0,26,],[15,15,]),'STRONG':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,],[16,-13,-14,16,16,16,16,16,16,-21,16,-16,-5,-6,16,16,-20,-8,-9,-7,-12,-10,-11,16,-19,32,-15,-18,16,-17,]),'$end':([1,2,3,10,12,13,14,15,17,18,19,20,21,22,23,24,26,27,29,30,31,32,],[0,-13,-14,-21,-1,-16,-5,-6,-4,-20,-8,-9,-7,-12,-10,-11,-3,-19,-15,-18,-2,-17,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,],[1,]),'expression':([0,26,],[17,31,]),'subfactor':([0,4,5,6,7,8,9,11,13,16,17,19,20,21,22,23,24,25,26,28,29,31,],[18,18,18,18,18,18,18,18,27,18,18,27,27,27,27,27,27,27,18,27,27,18,]),'statement':([0,],[12,]),'factor':([0,4,5,6,7,8,9,11,16,17,26,31,],[13,19,20,21,22,23,24,25,28,29,13,29,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> statement','body',1,'p_body','markdownparser.py',74),
  ('statement -> statement CR expression','statement',3,'p_state','markdownparser.py',78),
  ('statement -> statement CR','statement',2,'p_state','markdownparser.py',79),
  ('statement -> expression','statement',1,'p_state','markdownparser.py',80),
  ('expression -> CR','expression',1,'p_exp_cr','markdownparser.py',89),
  ('expression -> LINE','expression',1,'p_exp_line','markdownparser.py',93),
  ('expression -> H1 factor','expression',2,'p_exp_header_factor','markdownparser.py',97),
  ('expression -> H2 factor','expression',2,'p_exp_header_factor','markdownparser.py',98),
  ('expression -> H3 factor','expression',2,'p_exp_header_factor','markdownparser.py',99),
  ('expression -> H4 factor','expression',2,'p_exp_header_factor','markdownparser.py',100),
  ('expression -> H5 factor','expression',2,'p_exp_header_factor','markdownparser.py',101),
  ('expression -> H6 factor','expression',2,'p_exp_header_factor','markdownparser.py',102),
  ('expression -> SH1','expression',1,'p_exp_sheader1','markdownparser.py',117),
  ('expression -> SH2','expression',1,'p_exp_sheader2','markdownparser.py',121),
  ('expression -> expression factor','expression',2,'p_exp_factor','markdownparser.py',125),
  ('expression -> factor','expression',1,'p_exp_factor','markdownparser.py',126),
  ('factor -> STRONG factor STRONG','factor',3,'p_factor_strong','markdownparser.py',133),
  ('factor -> EM factor EM','factor',3,'p_factor_em','markdownparser.py',137),
  ('factor -> factor subfactor','factor',2,'p_factor_subfactor','markdownparser.py',141),
  ('factor -> subfactor','factor',1,'p_factor_subfactor','markdownparser.py',142),
  ('subfactor -> TEXT','subfactor',1,'p_subfactor','markdownparser.py',149),
]
